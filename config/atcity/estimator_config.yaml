%YAML:1.0 # need to specify the file type at the top!

# OVVU
verbosity: "ALL" # ALL, DEBUG, INFO, WARNING, ERROR, SILENT

use_fej: true # if first-estimate Jacobians should be used (enable for good consistency)
use_imuavg: true # if using discrete integration, if we should average sequential IMU measurements to "smooth" it
use_rk4int: true # if rk4 integration should be used (overrides imu averaging)

use_stereo: true # if we have more than 1 camera, if we should try to track stereo constraints between pairs
max_cameras: 1 # how many cameras we have 1 = mono, 2 = stereo, >2 = binocular (all mono tracking)

calib_cam_extrinsics: true # if the transform between camera and IMU should be optimized R_ItoC, p_CinI
calib_cam_intrinsics: true # if camera intrinsics should be optimized (focal, center, distortion)
calib_cam_timeoffset: false # if timeoffset between camera and IMU should be optimized

max_clones: 35 # how many clones in the sliding window
max_slam: 90 # number of features in our state vector
max_slam_in_update: 35 # update can be split into sequential updates of batches, how many in a batch
max_msckf_in_update: 200 # how many MSCKF features to use in the update
dt_slam_delay: 3 # delay before initializing (helps with stability from bad initialization...)

gravity_mag: 9.81 # magnitude of gravity in this location

feat_rep_msckf: "GLOBAL_3D"
feat_rep_slam: "ANCHORED_FULL_INVERSE_DEPTH"
feat_rep_aruco: "ANCHORED_FULL_INVERSE_DEPTH"

# zero velocity update parameters we can use
# we support either IMU-based or disparity detection.
try_zupt: true
zupt_chi2_multipler: 0 # set to 0 for only disp-based
zupt_max_velocity: 0.09
zupt_noise_multiplier: 50
zupt_max_disparity: 0.01 # set to 0 for only imu-based
zupt_only_at_beginning: false

# ==================================================================
# ==================================================================

init_window_time: 0.75 # how many seconds to collect initialization information
init_imu_thresh: 0.5 # threshold for variance of the accelerometer to detect a "jerk" in motion
init_max_disparity: 1.5 # max disparity to consider the platform stationary (dependent on resolution)
init_max_features: 25 # how many features to track during initialization (saves on computation)

init_dyn_mle_opt_calib: false
init_dyn_mle_max_iter: 50
init_dyn_mle_max_time: 0.05
init_dyn_mle_max_threads: 6
init_dyn_num_pose: 6
init_dyn_min_deg: 10.0

init_dyn_inflation_ori: 10
init_dyn_inflation_vel: 100
init_dyn_inflation_bg: 10
init_dyn_inflation_ba: 100
init_dyn_min_rec_cond: 1e-12

init_dyn_bias_g: [0.0, 0.0, 0.0]
init_dyn_bias_a: [0.0, 0.0, 0.0]

# ==================================================================
# ==================================================================

record_timing_information: true # if we want to record timing information of the method
record_timing_filepath: "/tmp/ov_traj_timing.txt" # https://docs.openvins.com/eval-timing.html#eval-ov-timing-flame

# if we want to save the simulation state and its diagional covariance
# use this with rosrun ov_eval error_simulation
save_total_state: true
filepath_est: "/tmp/ov_estimate.txt"
filepath_std: "/tmp/ov_estimate_std.txt"
filepath_gt: "/tmp/ov_groundtruth.txt"

# ==================================================================
# ==================================================================

# our front-end feature tracking parameters
# we have a KLT and descriptor based (KLT is better implemented...)
use_klt: true
num_pts: 300
fast_threshold: 10
grid_x: 9
grid_y: 5
min_px_dist: 5
knn_ratio: 0.70
track_frequency: 21.0
downsample_cameras: false # will downsample image in half if true
multi_threading: true # if should enable opencv multi threading
histogram_method: "HISTOGRAM" # NONE, HISTOGRAM, CLAHE

# aruco tag tracker for the system
# DICT_6X6_1000 from https://chev.me/arucogen/
use_aruco: false
num_aruco: 1024
downsize_aruco: true

# ==================================================================
# ==================================================================

# camera noises and chi-squared threshold multipliers
up_msckf_sigma_px: 2
up_msckf_chi2_multipler: 1
up_slam_sigma_px: 2
up_slam_chi2_multipler: 1
up_aruco_sigma_px: 1
up_aruco_chi2_multipler: 1

# masks for our images
use_mask: false

# ==================================================================
# ==================================================================

# OVVU all vehicle update parameters
vehicle_update_mode: "VEHICLE_UPDATE_NONE"
use_yaw_odom_second_order: true
use_yaw_jacobi_second_order: false
speed_update_mode: "SPEED_UPDATE_VECTOR"
sigma_speed_x: 0.1
sigma_zero_speed_y: 0.3
sigma_zero_speed_z: 0.3
vehicle_speed_chi2_multiplier: 1.0
sigma_steering_angle: 0.017453293
vehicle_steering_chi2_multiplier: 1.0
wheel_base: 2.791
steering_angle_update_min_speed: 3.0
ackermann_drive_msg_contains_steering_wheel_angle: true
steering_ratio: 15.2
max_steering_angle: 100.0
track_length: 1.568
single_track_chi2_multiplier: 1.0
differential_drive_chi2_multiplier: 1.0
ackermann_drive_topic: "/ackermann0"
wheel_speeds_topic: "/wheel_speeds0"

# imu and camera spacial-temporal
# imu config should also have the correct noise values
relative_config_imu: "atcity_imu_chain1.yaml"
relative_config_imucam: "atcity_imucam_chain1.yaml"
